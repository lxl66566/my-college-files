#import "./template.typ": *
#import "@preview/tablex:0.0.9": tablex, colspanx, rowspanx
#import "@preview/tablem:0.1.0": tablem


#show: project.with(
  title: "LTE移动通信物理层协议关键算法的仿真与实现",
  authors: ("absolutex",),
)

#title("第一章 LTE移动通信物理层协议关键算法的仿真与实现")

= 实践目的

+ 掌握LTE移动通信物理层协议实验的流程、原理及实现方法。
+ 掌握通过MATLAB编程实现LTE移动通信物理层协议实验的设计。

= 实践内容
== 验证性实验
=== asd
+ 理解 LTE移动通信物理层协议组成及各模块原理，搭建系统框图。
+ 配置实验参数，通过对应实验结果理解参数对结果的影响。
== 设计性实验
+ 浏览参考代码中的全部程序，理解实验代码。
+ 在设计代码的TDLTE_Cdblk_seg1.m 文件里补充码块分割部分代码。
+ 在设计代码的TDLTE_Cdblk_concate1.m 文件里补充码块级联部分代码。
+ 在设计代码的TDLTE_modfun.m 文件里补充调制映射部分的代码。
+ 在设计代码的 TDLTE_genantdata.m 文件里补充天线时域数据产生部分的代码。

= 基础实验部分

// 填写说明：基础实验部分只写上述7个算法的设计过程，如算法流程图、代码分析、实验结果等等，自拟小标题。
// 注：摘抄指导书的部分略，重点侧重代码设计和实验结果分析。

== CRC的设计与实现

CRC 是一种广泛应用于数据通信和存储中的错误检测技术，通过在数据传输或存储过程中添加冗余信息，以确保数据的完整性和准确性。而生成多项式在 CRC 算法中扮演着至关重要的角色，它决定了校验码的生成方式和检测错误的效率。

本次实验使用的 CRC 校验位为 24 位，生成多项式系数为1100001100100110011111011。
#figure(
  image("assets/crc.png", height: 30%),
  caption: [CRC 添加流程],
)

#include_code("../code/TDLTE_add_crc.m")

此代码的添加 CRC 校验的具体步骤为：

+ 附加零位：在原始数据尾部添加 24 个 0
+ 循环二进制除法（异或）
+ 求得 24 位余数即为 CRC 校验码


= 综合设计部分

// 填写说明：综合设计部分，指的是项目从信源到信宿的完整实现过程，包括要求编写的程序，也包括不要求编写的程序（理解、读懂）。自拟标题，有逻辑的将整个实现过程描述清楚。包括但不限于系统总体组成、系统各组成模块功能分析、系统参数分析（这是重点，要求将不同参数配置情况下的运行结果以表格形式进行对比，分析该参数的作用，分析不同参数对实验结果的影响，以及为什么会产生这种影响等等）

== 系统总体组成

== 系统各组成模块功能分析

== 系统参数分析

= 收获与体会

#tablex(
  columns: 5,
  align: center + horizon,
  header-rows: 1,
  // header
  [调制方式],
  [传输信息比特],
  [信噪比dB],
  [误码数
    （调制映射输入和解调制映射输出）],
  [误码数
    （信源和信宿）],
  // row1
  rowspanx(3)[QPSK],rowspanx(3)[28800],[40],[0],[0],
  // row2
  (),(),[20],[8],[0],
  // row3
  (),(),[0],[232],[0],

  // row4
  rowspanx(3)[16QAM],rowspanx(3)[57600],[40],[0],[0],
  // row5
  (),(),[20],[8],[0],
  // row6
  (),(),[0],[6360],[3815],


  // row7
  rowspanx(3)[64QAM],rowspanx(3)[86400],[40],[16],[0],
  // row8
  (),(),[20],[40],[0],
  // row9
  (),(),[0],[17544],[12842],
)